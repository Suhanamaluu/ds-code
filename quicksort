#include <stdio.h>
void swap(int *a, int *b)
{
	int temp = *a;
	*a = *b;
	*b = temp;
}
int partition(int a[], int low, int high)
{
	int pivot = a[low];
	int i = low + 1;
	int j = high;
	while (1)
	{
		while (i <= high && a[i] <= pivot){
			i++;
		}
		while (j >= low && a[j] > pivot){
			j--;
		}
		if (i >= j){
		break;
		}
		swap(&a[i], &a[j]);
	}
	swap(&a[low], &a[j]);
	return j;
}
void quickSort(int a[], int low, int high)
{
	if (low < high)
	{
		int p = partition(a, low, high);
		quickSort(a, low, p - 1);
		quickSort(a, p + 1, high);
	}
}
void display(int a[], int n)
{
	for (int i = 0; i < n; i++)
	{
		printf("%d ", a[i]);
	}
	printf("\n");
}
int main()
{
	int a[50], n;
	printf("Enter the limit of the array: ");
	scanf("%d", &n);
	printf("Enter the elements: ");
	for (int i = 0; i < n; i++)
	{
		scanf("%d", &a[i]);
	}
	quickSort(a, 0, n - 1);
	printf("Sorted array: ");
	display(a, n);
}

